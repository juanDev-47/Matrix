
import java.awt.Color;
import java.awt.Component;
import java.awt.GraphicsConfiguration;
import java.io.File;
import java.util.Random;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kaiki
 */
public class MatrizDinamica extends javax.swing.JFrame {
    private static int matriz[][];
    private static JTextField [][] matrizNueva;
    private final int[]primos = new int[70];
    private final int[] fibonacci = new int[15];
    private JFileChooser seleccionado = new JFileChooser();
    File archivo;
    String patch;
    Scanner sc;
    
    

    public MatrizDinamica(GraphicsConfiguration gc) {
        super(gc);
    }
    
    
    /**
     * Creates new form Matriz
     */
    public MatrizDinamica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCrear = new javax.swing.JButton();
        txtTamano = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSumar = new javax.swing.JButton();
        txtSumaTotal = new javax.swing.JLabel();
        btnPintaMayor = new javax.swing.JButton();
        btnPintaMenor = new javax.swing.JButton();
        btnPintaMayorPorColumna = new javax.swing.JButton();
        btnPintaMayorPorFila = new javax.swing.JButton();
        btnPintaDatoMayorPorfila = new javax.swing.JButton();
        btnPintaDatosSuma6ó15 = new javax.swing.JButton();
        btnOrdenaDescendentemente = new javax.swing.JButton();
        btnPintaMarco = new javax.swing.JButton();
        btnPromedioDiagonalPrincipal = new javax.swing.JButton();
        btnNumeroVecesCadaDato = new javax.swing.JButton();
        btnPintaTriangularPrincipal = new javax.swing.JButton();
        btnOrdenaDescendentemente2 = new javax.swing.JButton();
        btnIntercambiaDatosPares = new javax.swing.JButton();
        btnFibonacci = new javax.swing.JButton();
        btnPintaTableroAjedrez = new javax.swing.JButton();
        btnOrdenaAscendentementeDigitos = new javax.swing.JButton();
        btnPintaPrimos = new javax.swing.JButton();
        BtnLimpiarMatriz = new javax.swing.JButton();
        btnAbrirArchivo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));
        setLocation(new java.awt.Point(40, 10));
        setMaximumSize(new java.awt.Dimension(1300, 700));
        setMinimumSize(new java.awt.Dimension(1300, 700));
        setName("practica2logica2"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1300, 715));
        setSize(new java.awt.Dimension(1300, 715));

        btnCrear.setBackground(new java.awt.Color(0, 255, 204));
        btnCrear.setText("leer matriz");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        jLabel1.setText("Tamaño de la matriz");

        btnSumar.setBackground(new java.awt.Color(102, 255, 204));
        btnSumar.setText("Sumar Datos");
        btnSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumarActionPerformed(evt);
            }
        });

        txtSumaTotal.setText("Suma total de la matriz: ");

        btnPintaMayor.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaMayor.setText("Pintar mayor");
        btnPintaMayor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaMayorActionPerformed(evt);
            }
        });

        btnPintaMenor.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaMenor.setText("Pintar menor");
        btnPintaMenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaMenorActionPerformed(evt);
            }
        });

        btnPintaMayorPorColumna.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaMayorPorColumna.setText("Pinta Mayor columna");
        btnPintaMayorPorColumna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaMayorPorColumnaActionPerformed(evt);
            }
        });

        btnPintaMayorPorFila.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaMayorPorFila.setText("Pinta Mayor fila");
        btnPintaMayorPorFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaMayorPorFilaActionPerformed(evt);
            }
        });

        btnPintaDatoMayorPorfila.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaDatoMayorPorfila.setText("Pinta mayor dato por fila");
        btnPintaDatoMayorPorfila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaDatoMayorPorfilaActionPerformed(evt);
            }
        });

        btnPintaDatosSuma6ó15.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaDatosSuma6ó15.setText("pinta datos con suma de digitos 6 o 15");
        btnPintaDatosSuma6ó15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaDatosSuma6ó15ActionPerformed(evt);
            }
        });

        btnOrdenaDescendentemente.setBackground(new java.awt.Color(0, 255, 204));
        btnOrdenaDescendentemente.setText("Ordena cada fila descendentemente");
        btnOrdenaDescendentemente.setPreferredSize(new java.awt.Dimension(240, 23));
        btnOrdenaDescendentemente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenaDescendentementeActionPerformed(evt);
            }
        });

        btnPintaMarco.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaMarco.setText("Pinta el Marco");
        btnPintaMarco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaMarcoActionPerformed(evt);
            }
        });

        btnPromedioDiagonalPrincipal.setBackground(new java.awt.Color(0, 255, 204));
        btnPromedioDiagonalPrincipal.setText("Promedio diagonal principal");
        btnPromedioDiagonalPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromedioDiagonalPrincipalActionPerformed(evt);
            }
        });

        btnNumeroVecesCadaDato.setBackground(new java.awt.Color(0, 255, 204));
        btnNumeroVecesCadaDato.setText("Numero de veces de cada dato");
        btnNumeroVecesCadaDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumeroVecesCadaDatoActionPerformed(evt);
            }
        });

        btnPintaTriangularPrincipal.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaTriangularPrincipal.setText("Pinta diagonal principal");
        btnPintaTriangularPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaTriangularPrincipalActionPerformed(evt);
            }
        });

        btnOrdenaDescendentemente2.setBackground(new java.awt.Color(0, 255, 204));
        btnOrdenaDescendentemente2.setText("Ordena descendentemente por filas");
        btnOrdenaDescendentemente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenaDescendentemente2ActionPerformed(evt);
            }
        });

        btnIntercambiaDatosPares.setBackground(new java.awt.Color(0, 255, 204));
        btnIntercambiaDatosPares.setText("intercambiar Datos Pares De Filas (i,j)");
        btnIntercambiaDatosPares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntercambiaDatosParesActionPerformed(evt);
            }
        });

        btnFibonacci.setBackground(new java.awt.Color(0, 255, 204));
        btnFibonacci.setText("Pinta datos de la serie fibonacci");
        btnFibonacci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFibonacciActionPerformed(evt);
            }
        });

        btnPintaTableroAjedrez.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaTableroAjedrez.setText("Pinta como tablero de ajedrez");
        btnPintaTableroAjedrez.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaTableroAjedrezActionPerformed(evt);
            }
        });

        btnOrdenaAscendentementeDigitos.setBackground(new java.awt.Color(0, 255, 204));
        btnOrdenaAscendentementeDigitos.setText("Ordena digitos de cada dato ascend.");
        btnOrdenaAscendentementeDigitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenaAscendentementeDigitosActionPerformed(evt);
            }
        });

        btnPintaPrimos.setBackground(new java.awt.Color(0, 255, 204));
        btnPintaPrimos.setText("Pinta datos numeros primos");
        btnPintaPrimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPintaPrimosActionPerformed(evt);
            }
        });

        BtnLimpiarMatriz.setText("Limpiar Matriz");
        BtnLimpiarMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarMatrizActionPerformed(evt);
            }
        });

        btnAbrirArchivo.setText("Abrir archivo");
        btnAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTamano, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(btnCrear)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(txtSumaTotal))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(btnSumar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 41, Short.MAX_VALUE)
                                        .addComponent(btnPintaMayor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(BtnLimpiarMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnFibonacci, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                    .addComponent(btnNumeroVecesCadaDato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPromedioDiagonalPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPintaTriangularPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnOrdenaAscendentementeDigitos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPintaDatoMayorPorfila, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPintaMenor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPintaDatosSuma6ó15, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPintaMayorPorColumna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnOrdenaDescendentemente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPintaMayorPorFila, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(btnPintaMarco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnAbrirArchivo))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(525, 525, 525)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOrdenaDescendentemente2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIntercambiaDatosPares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPintaPrimos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPintaTableroAjedrez, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(268, 268, 268))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtSumaTotal)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnLimpiarMatriz)
                            .addComponent(btnAbrirArchivo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnSumar)
                    .addComponent(txtTamano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPintaMayor)
                    .addComponent(btnPintaMenor)
                    .addComponent(btnPintaMayorPorColumna)
                    .addComponent(btnPintaMayorPorFila))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPintaDatoMayorPorfila)
                    .addComponent(btnPintaDatosSuma6ó15)
                    .addComponent(btnOrdenaDescendentemente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPintaMarco)
                    .addComponent(btnPromedioDiagonalPrincipal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNumeroVecesCadaDato)
                    .addComponent(btnPintaTriangularPrincipal)
                    .addComponent(btnOrdenaDescendentemente2)
                    .addComponent(btnPintaPrimos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFibonacci)
                    .addComponent(btnOrdenaAscendentementeDigitos)
                    .addComponent(btnIntercambiaDatosPares)
                    .addComponent(btnPintaTableroAjedrez))
                .addContainerGap(694, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Si quiere crear otra matriz de diferencte tamaño\n"
                                                + "Oprima el boton limpiar matriz, e ingrese un nuevo valor\n"
                                                + "Para el tamaño de la matriz.\n"
                                                + "No precione generar matriz nuevamente sin antes limpiar.\n"
                                                + "Si se bloquea, se debe cerrar y volver abrir el programa.");
        int n=0;
        try{
                n=Integer.parseInt(txtTamano.getText());
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Ingrese solo datos númericos");
        }
        if(n<8 || n>16){
            JOptionPane.showMessageDialog(null,"El tamaño minimo es 8 y el maximo es 16");
            return;
        }
         mostrarMatriz(n);
        
        
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumarActionPerformed

        int c=0;
        for (int[] matriz1 : matriz) {
            for (int j = 0; j<matriz.length; j++) {
                c = matriz1[j] + c;
            }
        }
        JOptionPane.showMessageDialog(rootPane, "La suma total es:" + c);
    }//GEN-LAST:event_btnSumarActionPerformed

    private void btnPintaMayorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaMayorActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }


        int c = 0;
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (matriz[i][j] > c) {
                    c = matriz[i][j];
                }
            }
        }
        
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (matriz[i][j] == c) {
                    matrizNueva[i][j].setBackground(Color.yellow);
                }
            }
        }
    }//GEN-LAST:event_btnPintaMayorActionPerformed

    private void btnPintaMayorPorFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaMayorPorFilaActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int valorDado = (int) Math.floor(Math.random()*matriz.length);
        for (int i = 0; i < matriz.length; i++) {
            matrizNueva[valorDado][i].setBackground(Color.magenta);
        }
    }//GEN-LAST:event_btnPintaMayorPorFilaActionPerformed

    private void btnPintaMayorPorColumnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaMayorPorColumnaActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int valorDado = (int) Math.floor(Math.random()*matriz.length);
        for (int i = 0; i < matriz.length; i++) {
            matrizNueva[i][valorDado].setBackground(Color.magenta);
        }
        
        
    }//GEN-LAST:event_btnPintaMayorPorColumnaActionPerformed

    private void btnFibonacciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFibonacciActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        fibonacci[0] = 1; fibonacci[1] = 2; fibonacci[2] = 3; fibonacci[3] = 5; fibonacci[4] = 8; fibonacci[5] = 13; fibonacci[6] = 21; fibonacci[7] = 34;  fibonacci[8] = 55; fibonacci[9] = 89; 
        fibonacci[10] = 144; fibonacci[11] = 233; fibonacci[12] = 377; fibonacci[13] = 610; fibonacci[14] = 987;
        
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                for (int fibo: fibonacci){                    
                    if (fibo == matriz[i][j]) {
                        matrizNueva[i][j].setBackground(Color.yellow);                        
                    }
                }
                    
            }
        }
        
    }//GEN-LAST:event_btnFibonacciActionPerformed

    private void btnPintaTableroAjedrezActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaTableroAjedrezActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int c = 0;
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                    if (i % 2 == 0 && j % 2 == 0) {
                    matrizNueva[i][j].setBackground(Color.BLACK);
                    matrizNueva[i][j].setForeground(Color.white);
                }
                    else if (i % 2 != 0 && j % 2 != 0) {
                    matrizNueva[i][j].setBackground(Color.BLACK);
                    matrizNueva[i][j].setForeground(Color.white);
                }
                
            }
        }
    }//GEN-LAST:event_btnPintaTableroAjedrezActionPerformed

    private void btnPintaMarcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaMarcoActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        
        for (int i = 1; i <= matriz.length-1; i++) {
            matrizNueva[i][0].setBackground(Color.green); //primera fila 
        }
        for (int i = 1; i <= matriz.length-1; i++) {
            matrizNueva[i][matriz.length-1].setBackground(Color.green);// segunda fila
        }
        for (int i = matriz.length-1; i >= 0; i--) {
            matrizNueva[matriz.length-1][i].setBackground(Color.green);// segunda columna
        }
        for (int i = 0; i <= matriz.length; i++) {
            matrizNueva[0][i].setBackground(Color.green);// primera columna
        }
        
        
        
    }//GEN-LAST:event_btnPintaMarcoActionPerformed

    private void btnPintaMenorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaMenorActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        
        int c = 1000;
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (matriz[i][j] < c) {
                    c = matriz[i][j];
                }
            }
        }
        
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (matriz[i][j] == c) {
                    matrizNueva[i][j].setBackground(Color.yellow);
                }
            }
        }
    }//GEN-LAST:event_btnPintaMenorActionPerformed

    private void btnPintaTriangularPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaTriangularPrincipalActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (i == j) {
                    matrizNueva[i][j].setBackground(Color.yellow);
                }
            }
        }
    }//GEN-LAST:event_btnPintaTriangularPrincipalActionPerformed

    private void btnPintaPrimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaPrimosActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        primos[0] = 2; primos[1] = 3; primos[2] = 5; primos[3] = 7; primos[4] = 13; primos[5] = 17; primos[6] = 19; primos[7] = 23;  primos[8] = 29; primos[9] = 31; 
        primos[10] = 37; primos[11] = 41; primos[12] = 43; primos[13] = 47; primos[14] = 53; primos[15] = 59; primos[16] = 61; primos[17] =67;  primos[18] = 71; primos[19] = 101; 
        primos[20] = 109; primos[21] = 113; primos[22] = 127; primos[23] = 239; primos[24] = 263; primos[25] = 271; primos[26] = 283; primos[27] = 307;  primos[28] = 317; primos[29] = 349; 
        primos[30] = 359; primos[31] = 373; primos[32] = 289; primos[33] = 397; primos[34] = 419; primos[35] = 439; primos[36] = 449; primos[37] = 457;  primos[38] = 487; primos[39] = 431; 
        primos[40] = 499; primos[41] = 503; primos[42] = 521; primos[43] = 577; primos[44] = 599; primos[45] = 601; primos[46] = 617; primos[47] = 647;  primos[48] = 661; primos[49] = 691; 
        primos[50] = 701; primos[51] = 733; primos[52] = 743; primos[53] = 751; primos[54] = 769; primos[55] = 787; primos[56] = 797; primos[57] = 809;  primos[58] = 811; primos[59] = 821; 
        primos[60] = 839; primos[61] = 859; primos[62] = 877; primos[63] = 887; primos[64] = 907; primos[65] = 911; primos[66] = 937; primos[67] = 941;  primos[68] = 967; primos[69] = 997;
        
          for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                for (int primo: primos){                    
                    if (primo == matriz[i][j]) {
                        matrizNueva[i][j].setBackground(Color.red);
                        
                    }
                }
                    
            }
        }
        
    }//GEN-LAST:event_btnPintaPrimosActionPerformed

    private void btnPromedioDiagonalPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromedioDiagonalPrincipalActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int prom = 0;
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
                if (i == j) {
                    prom = prom + matriz[i][j];
                }
            }
        }
        JOptionPane.showMessageDialog(rootPane, "El promedio de la diagonal pricipal es:" + prom/matriz.length);
    }//GEN-LAST:event_btnPromedioDiagonalPrincipalActionPerformed

    private void BtnLimpiarMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarMatrizActionPerformed
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
               matrizNueva[i][j].setVisible(false);
                
            }
        }
        
        
    }//GEN-LAST:event_BtnLimpiarMatrizActionPerformed

    private void btnPintaDatoMayorPorfilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaDatoMayorPorfilaActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int[] datoMF = new int[matriz.length];
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                
                    if (matriz[i][j] > datoMF[i]) {
                        datoMF[i] =  matriz[i][j];   
                      
                    }
            }
            System.out.println(datoMF[i]);
            
        }
        
        
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                    if (matriz[i][j] == datoMF[i]) {
                        matrizNueva[i][j].setBackground(Color.green);
                    }              
            }
            
        }
        
        
    }//GEN-LAST:event_btnPintaDatoMayorPorfilaActionPerformed

    private void btnPintaDatosSuma6ó15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPintaDatosSuma6ó15ActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int dig1 = 0, dig2 = 0, dig3 = 0;
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                if (matriz[i][j] > 100) {
                    dig1 = matriz[i][j]/100;
                    dig2 = (matriz[i][j]%100)/10;
                    dig3 = (matriz[i][j]%100)%10;
                    
                    if (dig1 + dig2 + dig3 == 6 || dig1 + dig2 + dig3 == 15) {
                        matrizNueva[i][j].setBackground(new Color(101, 79, 104));
                        matrizNueva[i][j].setForeground(new Color(207, 204, 80));
                    }
                    
                }
                else if (matriz[i][j] > 10 && matriz[i][j] < 100) {
                    dig1 = (matriz[i][j]/10);
                    dig2 = (matriz[i][j]%10);
                    
                    if (dig1 + dig2  == 6 || dig1 + dig2 == 15) {
                        matrizNueva[i][j].setBackground(new Color(101, 79, 104));
                        matrizNueva[i][j].setForeground(new Color(207, 204, 80));
                    }
                }
                else if (matriz[i][j] == 6) {
                    matrizNueva[i][j].setBackground(new Color(101, 79, 104));
                    matrizNueva[i][j].setForeground(new Color(207, 204, 80));
                }
                
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_btnPintaDatosSuma6ó15ActionPerformed

    private void btnOrdenaDescendentementeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenaDescendentementeActionPerformed
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
               matrizNueva[i][j].setVisible(false);
                
            }
        }
        mostrarMatriz(matriz.length);
    }//GEN-LAST:event_btnOrdenaDescendentementeActionPerformed

    private void btnOrdenaDescendentemente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenaDescendentemente2ActionPerformed
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
               matrizNueva[i][j].setVisible(false);
                
            }
        }
        mostrarMatriz(matriz.length);
    }//GEN-LAST:event_btnOrdenaDescendentemente2ActionPerformed

    private void btnNumeroVecesCadaDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumeroVecesCadaDatoActionPerformed
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
               matrizNueva[i][j].setVisible(false);
                
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Esta es la matriz de frecuencia de cada dato\n"
                                                + "luego de verla oprima limpiar matriz y vuelva a generar otra matriz");
        

        
//        matriz=new int[matriz.length][matriz.length];
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                
                if(matriz[i][j]%60 == 0){
                    matriz[i][j] = 2;
                }
                else if(matriz[i][j]%39 == 0){
                    matriz[i][j] = 3;
                }else{
                    matriz[i][j] = 1;
                }
                
            }
        }
        int posh = 200;
        int posv =30;
        int fila=0;
        int col=0;
        

        
        matrizNueva = new JTextField[matriz.length][matriz.length];

        for(fila=0;fila<matriz.length;fila++){
            for(col=0;col<matriz.length;col++){
                matrizNueva[fila][col]= new JTextField();
                matrizNueva[fila][col].setBounds(posv,posh,40,30);
                matrizNueva[fila][col].setText(Integer.toString(matriz[fila][col]));
//                matrizNueva[fila][col].setBackground(Color.red);
                add(matrizNueva[fila][col]);
                posv+=80;
            
            }
            posh+=30;
            posv =30;
        }
        
        
        
        
    }//GEN-LAST:event_btnNumeroVecesCadaDatoActionPerformed

    private void btnIntercambiaDatosParesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntercambiaDatosParesActionPerformed
        for (int i = 0; i < matriz.length; i++) {
            for (int j = 0; j < matriz.length; j++) {
               matrizNueva[i][j].setVisible(false);
                
            }
        }
        mostrarMatriz(matriz.length);
    
    }//GEN-LAST:event_btnIntercambiaDatosParesActionPerformed

    private void btnOrdenaAscendentementeDigitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenaAscendentementeDigitosActionPerformed
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matrizNueva[i][j].setBackground(Color.white);
                matrizNueva[i][j].setForeground(Color.black);
            }
        }
        
        int dig1 = 0, dig2 = 0, dig3 = 0;
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                if (matriz[i][j] > 100) {
                    dig1 = matriz[i][j]/100;
                    dig2 = (matriz[i][j]%100)/10;
                    dig3 = (matriz[i][j]%100)%10;
                    
                    if (dig1 < dig2 && dig2 < dig3) {
                        dig1 = dig1 * 100;
                        dig2 = dig2 * 10;
                        
                        matrizNueva[i][j].setText(Integer.toString(dig1+dig2+dig3));
                        
                    }
                    else if (dig1 < dig3 && dig3 < dig2) {
                        dig1 = dig1 * 100;
                        dig3 = dig3 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig1+dig3+dig2));
                    }
                    else if (dig2 < dig3 && dig3 < dig1) {
                        dig2 = dig2 * 100;
                        dig3 = dig3 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig2+dig3+dig1));
                    }
                    else if (dig2 < dig1 && dig1 < dig3) {
                        dig2 = dig2 * 100;
                        dig1 = dig1 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig2+dig1+dig3));
                    }
                    else if (dig3 < dig2 && dig2 < dig1) {
                        dig3 = dig3 * 100;
                        dig2 = dig2 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig3+dig2+dig1));
                    }
                    else if (dig3 < dig1 && dig1 < dig2) {
                        dig3 = dig3 * 100;
                        dig1 = dig1 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig3+dig1+dig2));
                    }
                    
                }
                else if (matriz[i][j] > 10 && matriz[i][j] < 100) {
                    dig1 = (matriz[i][j]/10);
                    dig2 = (matriz[i][j]%10);
                    
                    if (dig1 < dig2) {
                        dig1 = dig1 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig1+dig2));
                    }
                    else {
                        dig2 = dig2 * 10;
                        matrizNueva[i][j].setText(Integer.toString(dig2+dig1));
                    }
                }
                else{
                    matrizNueva[i][j].setText(Integer.toString(matriz[i][j]));
                }
                
            }
        }
    }//GEN-LAST:event_btnOrdenaAscendentementeDigitosActionPerformed

    private void btnAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirArchivoActionPerformed
        if(seleccionado.showDialog(this, "Abrir Archivo") == JFileChooser.APPROVE_OPTION ){
              String patch = seleccionado.getSelectedFile().getAbsolutePath(); 
            }
        

    }//GEN-LAST:event_btnAbrirArchivoActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatrizDinamica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatrizDinamica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatrizDinamica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatrizDinamica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatrizDinamica().setVisible(true);
            }
        });
    }
    

    

    
public void mostrarMatriz(int n){
    
        

  
//        probando la clase scanner para leer los datos del archivo txt
//        try {
//            sc = new Scanner(new File(patch));
//            while(sc.hasNextLine()) {
//            System.out.println(sc.nextLine());
//            
//            
//        }
//            sc.close();
//        } catch (FileNotFoundException ex) {
//            JOptionPane.showMessageDialog(rootPane,"no funciona ");
//        }
//        
        
//        fin de la prueba de la clase scanner para leer datos del archivo txt    

            
        matriz=new int[n][n];
        Random aleatorio = new Random();
        for(int i=0; i<matriz.length; i++){
            for(int j=0; j<matriz.length; j++) {
                matriz[i][j] = aleatorio.nextInt(1000);
            }
        }
        int posh = 200;
        int posv =30;
        int fila=0;
        int col=0;
        

        
        matrizNueva = new JTextField[n][n];

        for(fila=0;fila<n;fila++){
            for(col=0;col<n;col++){
                matrizNueva[fila][col]= new JTextField();
                matrizNueva[fila][col].setBounds(posv,posh,40,30);
                matrizNueva[fila][col].setText(Integer.toString(matriz[fila][col]));
//                matrizNueva[fila][col].setBackground(Color.red);
                add(matrizNueva[fila][col]);
                posv+=80;
            
            }
            posh+=30;
            posv =30;
        }
        
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLimpiarMatriz;
    private javax.swing.JButton btnAbrirArchivo;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnFibonacci;
    private javax.swing.JButton btnIntercambiaDatosPares;
    private javax.swing.JButton btnNumeroVecesCadaDato;
    private javax.swing.JButton btnOrdenaAscendentementeDigitos;
    private javax.swing.JButton btnOrdenaDescendentemente;
    private javax.swing.JButton btnOrdenaDescendentemente2;
    private javax.swing.JButton btnPintaDatoMayorPorfila;
    private javax.swing.JButton btnPintaDatosSuma6ó15;
    private javax.swing.JButton btnPintaMarco;
    private javax.swing.JButton btnPintaMayor;
    private javax.swing.JButton btnPintaMayorPorColumna;
    private javax.swing.JButton btnPintaMayorPorFila;
    private javax.swing.JButton btnPintaMenor;
    private javax.swing.JButton btnPintaPrimos;
    private javax.swing.JButton btnPintaTableroAjedrez;
    private javax.swing.JButton btnPintaTriangularPrincipal;
    private javax.swing.JButton btnPromedioDiagonalPrincipal;
    private javax.swing.JButton btnSumar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel txtSumaTotal;
    private javax.swing.JTextField txtTamano;
    // End of variables declaration//GEN-END:variables

    private void showInputMessage(Object object, String no_funciona) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}


